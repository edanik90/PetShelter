{"version":3,"sources":["components/PetsList.js","views/Main.js","views/Info.js","components/PetForm.js","views/New.js","views/Edit.js","App.js","serviceWorker.js","index.js"],"names":["PetsList","pets","className","scope","map","pet","idx","key","name","type","to","_id","Main","useState","isLoaded","setIsLoaded","setPets","useEffect","axios","get","then","res","data","sort","pet1","pet2","catch","err","console","log","Info","id","style","setPet","isLiked","SetIsLiked","Axios","span","description","skillOne","skillTwo","skillThree","onClick","e","delete","navigate","likes","put","disabled","PetForm","initName","initType","initDesc","initSkillOne","initSkillTwo","initSkillThree","onSubmitProp","errors","buttonName","card","borderRadius","margin","padding","textAlign","label","fontWeight","invalid","display","fontSize","color","setName","setType","setDescription","setSkillOne","setSkillTwo","setSkillThree","onSubmit","preventDefault","onChange","target","value","message","New","setErrors","post","response","Edit","loaded","setLoaded","skllThree","App","h1","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.c19eafe3.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from '@reach/router';\r\n\r\nconst PetsList = ({pets}) => {\r\n    return(\r\n        <div className=\"row justify-content-center\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Type</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    pets.map((pet, idx) => {\r\n                        return(\r\n                            <tr key={idx}>\r\n                                <td>{pet.name}</td>\r\n                                <td>{pet.type}</td>\r\n                                <td>\r\n                                    <Link to={`/pet/${pet._id}`} className=\"btn btn-primary\">View pet's info</Link>\r\n                                    <span>&nbsp;</span>\r\n                                    <Link to={`/pet/${pet._id}/edit`} className=\"btn btn-dark\">Edit</Link>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PetsList;","import React, {useState, useEffect} from 'react';\r\nimport PetsList from '../components/PetsList';\r\nimport { Link } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nconst Main = () => {\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [pets, setPets] = useState([]);\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/pets\")\r\n            .then(res => {\r\n                setPets(res.data.sort((pet1, pet2) => pet1.type > pet2.type ? 1: -1));\r\n                setIsLoaded(true)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <h3>These pets are looking for a good home</h3>\r\n            <Link to=\"/pet/new\">Add a pet to the shelter</Link>\r\n            {\r\n                isLoaded && <PetsList pets={pets} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import React, {useEffect, useState} from 'react';\r\nimport Axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\nconst Info = ({id, style}) => {\r\n    const [pet, setPet] = useState({});\r\n    const [isLiked, SetIsLiked] = useState(false);\r\n    useEffect(() => {\r\n        Axios.get(`http://localhost:8000/api/pet/${id}`)\r\n            .then(res => setPet(res.data))\r\n            .catch(err => console.log(err))\r\n    }, [isLiked]);\r\n    const adoptPet = e => {\r\n        Axios.delete(`http://localhost:8000/api/pet/${id}`)\r\n            .then(res => navigate(\"/\"))\r\n            .catch(err => console.log(err))\r\n    }\r\n    const likePet = e => {\r\n        setPet({\r\n            name: pet.name,\r\n            type: pet.type,\r\n            description: pet.description,\r\n            skillOne: pet.skillOne,\r\n            skillTwo: pet.skillTwo,\r\n            skillThree: pet.skillThree,\r\n            likes: pet.likes++\r\n        });\r\n        Axios.put(`http://localhost:8000/api/pet/${id}`, pet)\r\n            .then(res => {\r\n                setPet(res.data);\r\n                SetIsLiked(true)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    return(\r\n        <div className=\"container\">\r\n            <h2>Details about: {pet.name}</h2>\r\n            <Link to=\"/\">Back to main page</Link>\r\n            <br></br>\r\n            <h3><span style={style.span}>Pet type:</span> {pet.type}</h3>\r\n            <h3><span style={style.span}>Description:</span> {pet.description}</h3>\r\n            <h3><span style={style.span}>Skills:</span></h3>\r\n            <h3>{pet.skillOne}</h3>\r\n            <h3>{pet.skillTwo}</h3>\r\n            <h3>{pet.skillThree}</h3>\r\n            <button className=\"btn btn-danger\" onClick={adoptPet}>Adopt {pet.name}</button>\r\n            <br></br>\r\n            <br></br>\r\n            <button className=\"btn btn-success\" onClick={likePet} disabled={isLiked}>Like {pet.name}</button>\r\n            <br></br>\r\n            <span>   {pet.likes} like(s)</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info;","import React, { useState } from 'react';\r\nimport { Link } from '@reach/router';\r\n\r\nconst PetForm = ({\r\n    initName, initType, initDesc,\r\n    initSkillOne, initSkillTwo, initSkillThree,\r\n    onSubmitProp, errors, buttonName }) => {\r\n\r\n    const style = {\r\n        card: {\r\n            borderRadius: '10px',\r\n            margin: '15px',\r\n            padding: '15px',\r\n            textAlign: 'left'\r\n        },\r\n        label: {\r\n            fontWeight: 'bold'\r\n        },\r\n        invalid: {\r\n            display: 'inline-block',\r\n            fontSize: '14px',\r\n            color: 'red',\r\n            margin: '0px',\r\n            padding: '0px'\r\n        }\r\n    }\r\n    const [name, setName] = useState(initName);\r\n    const [type, setType] = useState(initType);\r\n    const [description, setDescription] = useState(initDesc);\r\n    const [skillOne, setSkillOne] = useState(initSkillOne);\r\n    const [skillTwo, setSkillTwo] = useState(initSkillTwo);\r\n    const [skillThree, setSkillThree] = useState(initSkillThree);\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault();\r\n        onSubmitProp({ name, type, description, skillOne, skillTwo, skillThree });\r\n    }\r\n\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"card col-4\" style={style.card}>\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <div className=\"form-group\">\r\n                        <label style={style.label}>Pet Name:</label>\r\n                        <input className=\"form-control\"\r\n                            type=\"text\"\r\n                            onChange={e => { setName(e.target.value) }}\r\n                            value={name} />\r\n                        <div style={style.invalid}>{errors.name ? errors.name.message : null}</div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label style={style.label}>Pet Type:</label>\r\n                        <input className=\"form-control\"\r\n                            type=\"text\"\r\n                            onChange={e => { setType(e.target.value) }}\r\n                            value={type} />\r\n                        <div style={style.invalid}>{errors.type ? errors.type.message : null}</div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label style={style.label}>Pet Description:</label>\r\n                        <input className=\"form-control\"\r\n                            type=\"text\"\r\n                            onChange={e => { setDescription(e.target.value) }}\r\n                            value={description} />\r\n                        <div style={style.invalid}>{errors.description ? errors.description.message : null}</div>\r\n                    </div>\r\n                    <br></br>\r\n                    <h2>Skills (optional):</h2>\r\n                    <div className=\"form-group\">\r\n                        <label style={style.label}>Skill 1:</label>\r\n                        <input className=\"form-control\"\r\n                            type=\"text\"\r\n                            onChange={e => { setSkillOne(e.target.value) }}\r\n                            value={skillOne} />\r\n                        <div style={style.invalid}>{errors.skillOne ? errors.skillOne.message : null}</div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label style={style.label}>Skill 2:</label>\r\n                        <input className=\"form-control\"\r\n                            type=\"text\"\r\n                            onChange={e => { setSkillTwo(e.target.value) }}\r\n                            value={skillTwo} />\r\n                        <div style={style.invalid}>{errors.skillTwo ? errors.skillTwo.message : null}</div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label style={style.label}>Skill 3:</label>\r\n                        <input className=\"form-control\"\r\n                            type=\"text\"\r\n                            onChange={e => { setSkillThree(e.target.value) }}\r\n                            value={skillThree} />\r\n                        <div style={style.invalid}>{errors.skillThree ? errors.skillThree.message : null}</div>\r\n                    </div>\r\n                    <input className=\"btn btn-primary\" type=\"submit\" value={buttonName} />\r\n                    <span>&nbsp;</span>\r\n                    <Link className=\"btn btn-dark\" to=\"/\">Cancel</Link>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PetForm;","import React, { useState } from 'react';\r\nimport { Link, navigate } from '@reach/router';\r\nimport PetForm from '../components/PetForm';\r\nimport Axios from 'axios';\r\n\r\nconst New = () => {\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const addPet = pet => {\r\n        Axios.post(\"http://localhost:8000/api/pet/new\", pet)\r\n            .then(res => navigate(\"/\"))\r\n            .catch(err => setErrors(err.response.data.errors))\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <h2>Know a pet needing a home?</h2>\r\n            <Link to=\"/\">Back to main page</Link>\r\n            <PetForm initName=\"\"\r\n                initType=\"\"\r\n                initDesc=\"\"\r\n                initSkillOne=\"\"\r\n                initSkillTwo=\"\"\r\n                initSkillThree=\"\"\r\n                buttonName=\"Add Pet\"\r\n                onSubmitProp={addPet}\r\n                errors={errors} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default New;","import React, { useState, useEffect } from 'react';\r\nimport { Link, navigate } from '@reach/router';\r\nimport PetForm from '../components/PetForm';\r\nimport Axios from 'axios';\r\n\r\nconst Edit = ({ id }) => {\r\n    const [pet, setPet] = useState({});\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        Axios.get(`http://localhost:8000/api/pet/${id}`)\r\n            .then(res => {\r\n                setPet(res.data);\r\n                setLoaded(true)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [id])\r\n\r\n    const editPet = pet => {\r\n        Axios.put(`http://localhost:8000/api/pet/${id}`, pet)\r\n            .then(res => navigate(\"/\"))\r\n            .catch(err => setErrors(err.response.data.errors))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Edit {pet.name}</h2>\r\n            <Link to=\"/\">Back to main page</Link>\r\n            {\r\n                loaded && <PetForm initName={pet.name}\r\n                    initType={pet.type}\r\n                    initDesc={pet.description}\r\n                    initSkillOne={pet.skillOne}\r\n                    initSkillTwo={pet.skillTwo}\r\n                    initSkillThree={pet.skllThree}\r\n                    buttonName=\"Update Pet\"\r\n                    onSubmitProp={editPet}\r\n                    errors={errors} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Edit;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Router } from '@reach/router';\nimport Main from './views/Main';\nimport Info from './views/Info';\nimport New from './views/New';\nimport Edit from './views/Edit';\n\nfunction App() {\n  const style = {\n    h1:{\n      fontSize: '50px'\n    },\n    span:{\n      fontWeight:'bold'\n    }\n  }\n  return (\n    <div className=\"App\">\n      <h1 style={style.h1}>Pet Shelter</h1>\n      <Router>\n        <Main path=\"/\" />\n        <Info path=\"/pet/:id\" style={style}/>\n        <New path=\"/pet/new\" />\n        <Edit path=\"/pet/:id/edit\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}